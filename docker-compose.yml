version: '3.9'

services:
  # Векторная база данных Qdrant
  qdrant:
    image: qdrant/qdrant:latest
    container_name: rag-qdrant
    restart: unless-stopped
    volumes:
      - ./data/embeddings:/qdrant/storage
    ports:
      - "6333:6333"
      - "6334:6334"
    networks:
      - ragnet
    environment:
      - QDRANT_ALLOW_RECOVERY_MODE=true

  sync_service:
    build:
      context: ./scripts  # Указываем, где лежит Dockerfile
    container_name: rag_sync_service
    env_file:
      - .env  # Подключаем файл с переменными окружения
    # ports: # Эту и следующую строку прописали для прохождения идентификации gdrive
    #   - "8080:8080"
    volumes:
      # Пробрасываем локальную папку для синхронизации внутрь контейнера
      - /home/makrushin/makrushinrag/documents:/data/sync_target
      # Пробрасываем конфиг rclone с хоста в контейнер (используем абсолютный путь)
      - /root/.config/rclone/rclone.conf:/root/.config/rclone/rclone.conf:ro
      # :ro - read-only, хорошая практика
      # Пробрасываем файлы аутентификации Google, чтобы не терять их при перезапуске
      - ./scripts/credentials.json:/app/credentials.json
      - ./scripts/token.json:/app/token.json

  # API сервис (будет разработан позже)
  # api:
  #   build: ./src/backend
  #   container_name: rag-api
  #   restart: unless-stopped
  #   volumes:
  #     - ./data:/app/data
  #     - ./logs:/app/logs
  #   ports:
  #     - "8000:8000"
  #   networks:
  #     - ragnet
  #   env_file:
  #     - ./config/.env
  #   depends_on:
  #     - qdrant

  # Веб-интерфейс (будет разработан позже)
  # frontend:
  #   build: ./src/frontend
  #   container_name: rag-frontend
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - ragnet
  #   env_file:
  #     - ./config/.env
  #   depends_on:
  #     - api

  # Telegram бот (будет разработан позже)
  # bot:
  #   build: ./src/bot
  #   container_name: rag-bot
  #   restart: unless-stopped
  #   volumes:
  #     - ./logs:/app/logs
  #   networks:
  #     - ragnet
  #   env_file:
  #     - ./config/.env
  #   depends_on:
  #     - api

networks:
  ragnet:
    name: ragnet
    external: true
