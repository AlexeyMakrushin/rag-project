# –§–∞–π–ª: scripts/main.py
#
# –û–ø–∏—Å–∞–Ω–∏–µ:
# –ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç-–æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä. –ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —ç—Ç–∞–ø—ã –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
# –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–º –ø–ª–∞–Ω–æ–º.

import os
from dotenv import load_dotenv

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏
from get_gdrive_methadata import GDriveScanner
from db_client import SupabaseClient
import get_file_lists
import clone_files
import get_server_methadata # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Å–∫–∞–Ω–µ—Ä

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è-–æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä."""
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–Ω–æ–π —Å–≤–µ—Ä–∫–∏ –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...")
    
    load_dotenv()
    GDRIVE_FOLDER_ID = os.getenv("GOOGLE_DRIVE_FOLDER_ID")
    LOCAL_SYNC_PATH = os.getenv("LOCAL_SYNC_PATH") # –ü—É—Ç—å –∫ /documents
    if not GDRIVE_FOLDER_ID or not LOCAL_SYNC_PATH:
        print("‚ùå –û—à–∏–±–∫–∞: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ GOOGLE_DRIVE_FOLDER_ID –∏ LOCAL_SYNC_PATH –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã.")
        return

    # --- –≠–¢–ê–ü –ê: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è GDrive -> –ë–∞–∑–∞ -> –õ–æ–∫–∞–ª—å–Ω—ã–µ –§–∞–π–ª—ã ---
    print("\n" + "="*20 + " –≠–¢–ê–ü –ê: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å Google Drive " + "="*20)
    
    # A.1. –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
    print("\n[A.1] –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Å GDrive –∏ –∏–∑ –ë–î...")
    gdrive_scanner = GDriveScanner()
    if not gdrive_scanner.service: return
    
    gdrive_metadata = gdrive_scanner.get_metadata_from_gdrive(GDRIVE_FOLDER_ID)
    if gdrive_metadata is None: return
    print(f"  - –ù–∞–π–¥–µ–Ω–æ {len(gdrive_metadata)} —Ñ–∞–π–ª–æ–≤ –Ω–∞ Google Drive.")

    db_client = SupabaseClient() # –ö–ª–∏–µ–Ω—Ç —É–∂–µ —Å–æ–∑–¥–∞–Ω –≤ –º–æ–¥—É–ª–µ clone_files, –Ω–æ –∑–¥–µ—Å—å –æ–Ω –Ω—É–∂–µ–Ω –¥–ª—è —á—Ç–µ–Ω–∏—è
    db_mirror_data = db_client.get_all_documents()
    print(f"  - –ü–æ–ª—É—á–µ–Ω–æ {len(db_mirror_data)} –∑–∞–ø–∏—Å–µ–π –∏–∑ gdrive_mirror.")

    # A.2. –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (GDrive vs –ë–∞–∑–∞)
    print("\n[A.2] –°—Ä–∞–≤–Ω–µ–Ω–∏–µ GDrive —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö...")
    to_create, to_update, to_move, to_delete = get_file_lists.get_gdrive_vs_db_plan(gdrive_metadata, db_mirror_data)
    print(f"  - –ü–ª–∞–Ω: –°–æ–∑–¥–∞—Ç—å({len(to_create)}), –ò–∑–º–µ–Ω–∏—Ç—å({len(to_update)}), –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å({len(to_move)}), –£–¥–∞–ª–∏—Ç—å({len(to_delete)})")

    # A.3. –ò—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞
    print("\n[A.3] –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...")
    clone_files.execute_create(to_create)
    clone_files.execute_change(to_update)
    clone_files.execute_move(to_move)
    clone_files.execute_delete(to_delete)
    
    print("\n‚úÖ –≠–¢–ê–ü –ê –∑–∞–≤–µ—Ä—à–µ–Ω.")


    # --- –≠–¢–ê–ü B: –ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ ---
    print("\n" + "="*20 + " –≠–¢–ê–ü B: –ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ " + "="*20)

    # B.1. –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
    print("\n[B.1] –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞ –∏ –∏–∑ –ë–î...")
    server_metadata = get_server_methadata.get_metadata_from_server(LOCAL_SYNC_PATH)
    db_mirror_data_updated = db_client.get_all_documents() # –ü–µ—Ä–µ—á–∏—Ç—ã–≤–∞–µ–º –±–∞–∑—É, –æ–Ω–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å
    print(f"  - –ü–æ–ª—É—á–µ–Ω–æ {len(db_mirror_data_updated)} –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –∏–∑ gdrive_mirror.")
    
    # B.2. –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (–°–µ—Ä–≤–µ—Ä vs –ë–∞–∑–∞)
    print("\n[B.2] –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö...")
    to_refetch, to_delete_local = get_file_lists.get_server_vs_db_plan(server_metadata, db_mirror_data_updated)
    print(f"  - –ü–ª–∞–Ω –ø—Ä–æ–≤–µ—Ä–∫–∏: –ü–µ—Ä–µ–∫–∞—á–∞—Ç—å({len(to_refetch)}), –£–¥–∞–ª–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ({len(to_delete_local)})")
    
    # B.3. –ò—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ "—Å–∞–º–æ–∏—Å—Ü–µ–ª–µ–Ω–∏—è"
    # –î–ª—è –ø–µ—Ä–µ–∑–∞–∫–∞—á–∫–∏ –º—ã –º–æ–∂–µ–º –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é execute_change,
    # —Ç.–∫. –æ–Ω–∞ –¥–µ–ª–∞–µ—Ç —Ç–æ –∂–µ —Å–∞–º–æ–µ - –∫–∞—á–∞–µ—Ç —Ñ–∞–π–ª –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∑–∞–ø–∏—Å—å –≤ –ë–î.
    print("\n[B.3] –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ —Å–∞–º–æ–∏—Å—Ü–µ–ª–µ–Ω–∏—è...")
    clone_files.execute_change(to_refetch)

    # –£–¥–∞–ª—è–µ–º "–º—É—Å–æ—Ä–Ω—ã–µ" —Ñ–∞–π–ª—ã —Å –¥–∏—Å–∫–∞
    print(f"\n--- –£–¥–∞–ª–µ–Ω–∏–µ {len(to_delete_local)} '–º—É—Å–æ—Ä–Ω—ã—Ö' —Ñ–∞–π–ª–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞ ---")
    for relative_path in to_delete_local:
        full_path = os.path.join(LOCAL_SYNC_PATH, relative_path)
        print(f"-> –£–¥–∞–ª–µ–Ω–∏–µ: {full_path}")
        try:
            os.remove(full_path)
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {full_path}: {e}")

    print("\n‚úÖ –≠–¢–ê–ü B –∑–∞–≤–µ—Ä—à–µ–Ω.")
    
    print("\n‚ú®‚ú®‚ú® –ü—Ä–æ—Ü–µ—Å—Å –ø–æ–ª–Ω–æ–π —Å–≤–µ—Ä–∫–∏ –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω! ‚ú®‚ú®‚ú®")


if __name__ == "__main__":
    main()